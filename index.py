# coding=utf-8
from telebot import types
import telebot
import time
import requests
#import win32api
#from aiogram.dispatcher import Dispatcher

from telebot.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

'''
#===========================================================================================================================================4
l = '–≥—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏'.replace(' ', '+')
way = []
topway = []
name = []
topname = []
text = []




'''

op_showtext=1
op_next=2
op_top20=3
op_yandexmusic=4

short = 'https://clck.ru/--?url='

max_songs_count_perpage=5
btn_marker="btn" 
siteurl = 'https://alloflyrics.cc'

def link_shorter(link):
    shortlink = requests.get(short+link).text
    return shortlink
'''
>>> url = 'http://bit.ly'
>>> import urllib2
>>> fetcher = urllib2.urlopen(
      'https://clck.ru/--?url='+
      url)
>>> fetcher.read()
'https://clck.ru/8JM'
'''

#==========================================================================
def searchSongsShowButtons(msg_chat_id, url, startindex):
    lastSearchIndex=0
    #—Å–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π url
    #search_text = msg_text.replace(' ', '+')
    #url = siteurl+'search/?s='+search_text
    #bot.send_message(msg_chat_id, "url=[{}]".format(url))
    #print(url)
    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    html = requests.get(url).text
    #–ù–∞—Ö–æ–¥–∏–º –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–æ–≤
    songsCount, lastSearchIndex = searchInnerText(html, '–í—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤: ', '</th>', lastSearchIndex)
    songsCount=int(songsCount)
    
    
    if songsCount<=0:
        bot.send_message(msg_chat_id, "–¢a–∫–∏—Ö –ø–µ—Å–µ–Ω –Ω–µ –Ω–∞—à–ª–∏ :(")
    else:
        if startindex==0:
            bot.send_message(msg_chat_id, "–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø–µ—Å–µ–Ω –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π: {}".format(songsCount))
        k=min(startindex+max_songs_count_perpage, songsCount)
        inline_kb1 = types.InlineKeyboardMarkup()
        for i in range(k):
            songUrl, lastSearchIndex = searchInnerText(html, '<td><a href="', '">', lastSearchIndex)
            songName, lastSearchIndex = searchInnerText(html, '">', '</a></td>', lastSearchIndex)
            if i<startindex:
                continue
            #bot.send_message(msg_chat_id, songName)
            
            data="{}{}{}".format(btn_marker,op_showtext, link_shorter(siteurl+songUrl))
            #print(f'len(data)=[{len(data)}]')
            
            inline_btn_showlyrics = InlineKeyboardButton(
                "{}. {}".format(i+1, songName), 
                callback_data=data
            )
            inline_kb1.add(inline_btn_showlyrics) 
        
        if k != songsCount:
            inline_kb1.add(InlineKeyboardButton(
                "–°–ª–µ–¥—É—é—â–∏–µ {} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤".format(max_songs_count_perpage),
                callback_data="{}{} {} {}".format(btn_marker,op_next, k, link_shorter(url))
            ))
                
        bot.send_message(msg_chat_id, "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —Å {} –ø–æ {}".format(startindex + 1, k), reply_markup=inline_kb1)
           
#==========================================================================
def ShowText(msg_chat_id, song_url):
    html = requests.get(song_url).text
    
     
    txt, xx = searchInnerText(html, '<p>', '</p>', html.find('<li role="presentation" class="active"><a href="#">–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏</a></li>'))
    txt = txt.replace('<br>', '')
    
    songname, xx = searchInnerText(html, '<h1>', '—Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏', html.find('<a href="/browse/ru-YA.html" class="let btn btn-default">–Ø</a>'))
    
    link = link_shorter('https://music.yandex.ru/search?text=' + songname.replace(' ', '%20'))
    
    kb = types.InlineKeyboardMarkup()
    ya_button = types.InlineKeyboardButton(text="–Ø–Ω–¥–µ–∫—Å –º—É–∑—ã–∫–∞", url = link)
    kb.add(ya_button)
    
    
    bot.send_message(msg_chat_id, songname+"\n\n"+txt, reply_markup=kb)
            

def searchInnerText(txt, marker1, marker2, startSearchIndex):
    start1=txt.find(marker1, startSearchIndex) + len(marker1)
    start2=txt.find(marker2, start1)
    res = txt[start1:start2]
    return res, start2
    

def waytopf():
    topstart = (searchtext.find(s)) + 13
    topend = (searchtext.find('>', topstart)) - 2
    topway.append(searchtext[topstart:topend])
    #---
    nam = searchtext[topend+3:searchtext.find('</', topend+3)]
    topname.append(nam)
    print(topname)
#==========================================================================
#Here is the token for bot SongText @SongTexterbot
bot=telebot.TeleBot("1604429645:AAFbXQ3rx_a4MMV1LGCYghF2HmwD25J69pE")


mid = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
mid.row('üîé–ù–∞–π—Ç–∏ –ø–µ—Å–Ω—éüîé','‚ùì–ß—Ç–æ —è —É–º–µ—é?‚ùì', '‚ÑπÔ∏è–û –Ω–∞—Å‚ÑπÔ∏è')
#==========================================================================
#dp = Dispatcher(bot)

@bot.callback_query_handler(func=lambda c: True)# c.data and c.data.startswith(btn_marker))
def process_callback_btn(callback_query): #types.CallbackQuery
    # –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –æ–ø–µ—Ä–∞—Ü–∏–∏
    callback_data=callback_query.data[len(btn_marker):]
    op_code=callback_data[0]
    callback_data = callback_data[1:]
    # –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–∫–ª—é—á–∞—è URL
    # –≤—ã–∑—ã–≤–∞—Ç—å url, –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ html
    # –æ—Ç–æ–±—Ä–∞–∑–∏—Çm –∫–Ω–æ–ø–∫–∏
    if int(op_code) == op_next:
        # –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–∫–ª—é—á–∞—è URL
        start_index = callback_data[1:callback_data.find(" ",2)]
        searchurl = callback_data[callback_data.find(start_index)+len(start_index)+1:] 
        # –æ—Ç–æ–±—Ä–∞–∑–∏—Çm –∫–Ω–æ–ø–∫–∏
        searchSongsShowButtons(callback_query.message.chat.id, searchurl, int(start_index))
    if int(op_code) == op_showtext:
        # –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–∫–ª—é—á–∞—è URL
        # –æ—Ç–æ–±—Ä–∞–∑–∏—Çm —Çt–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É TOP 20 b –∫–Ω–æ–ø–∫—É Yandex M
        ShowText(callback_query.message.chat.id, callback_data)
#==========================================================================
#def top20(url):
#    for i in range(5)
#=================================================================================================================================================
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–µ—Å–Ω–∏ –∏ –∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ –ª—é–±–æ–º—É —Å–ª–æ–≤—É –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å! –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –µ–µ —Å–ª–æ–≤–∞ –∏ –¥–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ —è–Ω–¥–µ–∫—Å –º—É–∑—ã–∫—É.', reply_markup=mid)
      
    
@bot.message_handler(content_types=['text'])
def vibor(message):
    print(message)
    print(message.text)
    if message.text == 'üîé–ù–∞–π—Ç–∏ –ø–µ—Å–Ω—éüîé':
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è')
    elif message.text == '‚ùì–ß—Ç–æ —è —É–º–µ—é?‚ùì':
        bot.send_message(message.chat.id, '–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–µ—Å–Ω–∏ –∏ –∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ –ª—é–±–æ–º—É —Å–ª–æ–≤—É –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å!', reply_markup=mid)
    elif message.text =='‚ÑπÔ∏è–û –Ω–∞—Å‚ÑπÔ∏è':
        bot.send_message(message.chat.id, '–ë–æ—Ç –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω @Depost1497 11.03.2021', reply_markup=mid)
    else:
        #—Å–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π url
        search_text = message.text.replace(' ', '+')
        url = siteurl+'/search/?s='+search_text
        searchSongsShowButtons(message.chat.id, url, 0)
    
    
#–±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
bot.polling(none_stop=True, interval=0)